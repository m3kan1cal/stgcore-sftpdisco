AWSTemplateFormatVersion: '2010-09-09'
Description: This template deploys an IAM role and policy for AWS Lambda functions
             for applications needing access to S3, DynamoDb, SQS and SNS.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Account Details
        Parameters:
          - AccountSet
          - Owner
          - SecurityContact
      - Label:
          default: Required Tags
        Parameters:
          - Environment
          - Customer
          - Application
          - ApplicationVersion
          - ApplicationRole
          - InfrastructureVersion
          - ProjectCostCenter
          - OperatingCostCenter
          - Confidentiality
          - Compliance
          - AutomateOption
          - AutomateAt

Parameters:

  # Mandatory tags that will be added to all resources that support tags.
  # https://aws.amazon.com/answers/account-management/aws-tagging-strategies/
  AccountSet:
    Type: String
    AllowedPattern: '[a-zA-Z0-9-]*'
    Default: stoic
    Description: Name of the Account Set to deploy to.

  Environment:
    Type: String
    AllowedValues:
      - sandbox
      - nonprod
      - prod
    Default: nonprod
    ConstraintDescription: Must be a valid environment.
    Description: Used to distinguish between sandbox, development, test, and production
                 infrastructure.

  Customer:
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: 'STG'
    ConstraintDescription: Must be a valid customer name.
    Description: Used to identify a specific client that a particular group of
                 resources serves.

  Application:
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: 'STGDisco'
    ConstraintDescription: Must be a valid application and resource prefix.
    Description: In this capacity, application does not refer to an installed software component,
                 but rather the overall business application that the resource supports. Also,
                 used as the resource prefix for other resources.

  ApplicationVersion:
    Type: String
    AllowedPattern: '[a-z0-9.]*'
    Default: '1.0.0'
    ConstraintDescription: Must be a valid application version.
    Description: Used to help distinguish between different versions of resources or
                 applications. Format should be Pattern - '#.#.#'.

  ApplicationRole:
    Type: String
    AllowedValues:
      - Networking
      - WebServer
      - MessageBroker
      - Database
      - WebUI
      - DataCache
      - Security
    Default: Security
    ConstraintDescription: Must be a valid application role.
    Description: Used to describe the function of a particular resource (e.g. networking,
                 web server, message broker, database).

  InfrastructureVersion:
    Type: String
    AllowedPattern: '[a-z0-9.]*'
    Default: '1.0.0'
    ConstraintDescription: Must be a valid infrastructure version.
    Description: Used to help distinguish between different versions of resources or applications.
                 Format should be Pattern - '#.#.#'.

  ProjectCostCenter:
    Type: String
    MinLength: 9
    AllowedPattern: '[0-9]*'
    Default: '9493076548'
    ConstraintDescription: Must be a valid cost center.
    Description: Used to identify the cost center or business unit associated with a resource;
                 typically for cost allocation and tracking.

  OperatingCostCenter:
    Type: String
    MinLength: 9
    AllowedPattern: '[0-9]*'
    Default: '9493076548'
    ConstraintDescription: Must be a valid cost center.
    Description: Used to identify the cost center or business unit associated with a resource;
                 typically for cost allocation and tracking.

  Owner:
    Type: String
    Default: 'fireteamosiris@withstg.com'
    ConstraintDescription: Must be a valid email address.
    Description: Used to identify who is responsible for the resource.

  SecurityContact:
    Type: String
    Default: 'fireteamosiris@withstg.com'
    ConstraintDescription: Must be a valid email address.
    Description: The owner key is used to designate the CBG team associated with the given
                 AWS resource.

  Confidentiality:
    Type: String
    AllowedValues:
      - Public
      - Private
      - Confidential
      - PII/PHI
    Default: PII/PHI
    ConstraintDescription: Must be a valid data-confidentiality level.
    Description: An identifier for the specific data-confidentiality level a resource supports.

  Compliance:
    Type: String
    AllowedValues:
      - HIPAA
      - SOX
      - FIPS
      - Other
      - None
    Default: HIPAA
    ConstraintDescription: Must be a valid compliance level.
    Description: An identifier for workloads designed to adhere to specific compliance requirements.

  AutomateOption:
    Type: String
    AllowedValues:
      - OptIn
      - OptOut
    Default: OptIn
    ConstraintDescription: Must be a valid automation level.
    Description: Used to indicate whether a resource should be automatically included in an
                 automated activity such as starting, stopping, or resizing instances.

  AutomateAt:
    Type: String
    AllowedPattern: '[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]'
    Default: '9999-12-31 13:37'
    ConstraintDescription: Must be a valid date timestamp in YYYY-MM-DD HH:MM timestamp format.
    Description: Used to identify the date or time a resource should be started, stopped,
                 deleted, or rotated.

Resources:
  StandardLambdaWithSFTPRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      RoleName: StandardLambdaWithSFTPRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole

      # Note that these rights are needed if you want your function to be able
      # to communicate with resources within your VPC.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: StandardLambdaSFTPAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectTagging
                  - s3:GetObjectVersionTagging
                  - s3:DeleteObject
                  - s3:DeleteObjectTagging
                  - s3:DeleteObjectVersionTagging
                  - s3:PutObject
                  - s3:PutObjectTagging
                  - s3:PutObjectVersionTagging
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: '*'
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: '*'
              - Effect: Allow
                Action:
                  - cognito-idp:AdminInitiateAuth
                  - cognito-idp:AdminRespondToAuthChallenge
                  - cognito-idp:AdminGetUser
                  - cognito-idp:AdminUpdateAuthEventFeedback
                  - cognito-idp:AdminUserGlobalSignOut
                  - cognito-idp:AdminUpdateUserAttributes
                Resource: '*'
              - Effect: Allow
                Action:
                  - sns:Publish
                  - sns:ListTopics
                Resource: '*'
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                Resource: '*'
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                  - ses:GetSendQuota
                Resource: '*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:ListSecrets
                  - secretsmanager:ListSecretVersionIds
                Resource: '*'
      Tags:
        - Key: ResourceGoup
          Value: !Sub ${Application}-ResourceGroup
        - Key: Name
          Value: !Sub ${Application}-StandardLambdaWithSFTPRole
        - Key: Customer
          Value: !Ref Customer
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref Application
        - Key: ApplicationVersion
          Value: !Ref ApplicationVersion
        - Key: ApplicationRole
          Value: !Ref ApplicationRole
        - Key: InfrastructureVersion
          Value: !Ref InfrastructureVersion
        - Key: ProjectCostCenter
          Value: !Ref ProjectCostCenter
        - Key: OperatingCostCenter
          Value: !Ref OperatingCostCenter
        - Key: Owner
          Value: !Ref Owner
        - Key: SecurityContact
          Value: !Ref SecurityContact
        - Key: Confidentiality
          Value: !Ref Confidentiality
        - Key: Compliance
          Value: !Ref Compliance
        - Key: AutomateOption
          Value: !Ref AutomateOption
        - Key: AutomateAt
          Value: !Ref AutomateAt

Outputs:
  StandardLambdaWithSFTPRole:
    Description: The ARN of the role that lambda can use for accessing SFTP resources.
    Value: !GetAtt StandardLambdaWithSFTPRole.Arn
    Export:
      Name: !Join [':', [!Ref 'AWS::StackName', !Ref Environment, StandardLambdaWithSFTPRole]]
